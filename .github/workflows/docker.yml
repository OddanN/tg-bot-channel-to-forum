name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up QEMU (для эмуляции ARM)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Set up Buildx (для мультиарх сборки)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Extract short SHA
      - name: Extract short SHA
        id: vars
        run: echo "sha_short=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      # 6. Build & push for commits (multi-arch)
      - name: Build & push commit image
        if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/tg-bot-channel-to-forum:sha-${{ steps.vars.outputs.sha_short }}

      # 7. Build & push for tags (multi-arch)
      - name: Build & push tag image
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/tg-bot-channel-to-forum:sha-${{ steps.vars.outputs.sha_short }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/tg-bot-channel-to-forum:latest
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/tg-bot-channel-to-forum:${{ github.ref_name }}

      # 8. Update Docker Hub repository overview
      - name: Update Docker Hub Overview
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # Получаем содержимое README.md и экранируем кавычки
          FULL_DESC=$(jq -Rs . < README.md)
          
          # Получаем JWT токен для API Docker Hub
          JWT=$(curl -s -X POST https://hub.docker.com/v2/users/login/ \
            -H "Content-Type: application/json" \
            -d "{\"username\": \"${DOCKERHUB_USERNAME}\", \"password\": \"${DOCKERHUB_TOKEN}\"}" \
            | jq -r .token)

          # Обновляем full_description репозитория
          curl -s -X PATCH "https://hub.docker.com/v2/repositories/${DOCKERHUB_USERNAME}/tg-bot-channel-to-forum/" \
            -H "Content-Type: application/json" \
            -H "Authorization: JWT ${JWT}" \
            -d "{\"full_description\": ${FULL_DESC}}"
